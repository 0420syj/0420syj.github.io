"use strict";(self.webpackChunk_0420_syj_github_io=self.webpackChunk_0420_syj_github_io||[]).push([[1496],{5620:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var o=n(6687);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=o.createContext({}),l=function(t){var e=o.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=l(t.components);return o.createElement(u.Provider,{value:e},t.children)},c="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},g=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,u=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),c=l(n),g=i,m=c["".concat(u,".").concat(g)]||c[g]||d[g]||r;return n?o.createElement(m,a(a({ref:e},p),{},{components:n})):o.createElement(m,a({ref:e},p))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,a=new Array(r);a[0]=g;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s[c]="string"==typeof t?t:i,a[1]=s;for(var l=2;l<r;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2072:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(557),i=(n(6687),n(5620));const r={sidebar_position:2},a="Deploy to GitHub Pages",s={unversionedId:"docusaurus-tutorial/basic/deploy",id:"docusaurus-tutorial/basic/deploy",title:"Deploy to GitHub Pages",description:"content was generated utilizing ChatGPT-4.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/docusaurus-tutorial/basic/deploy.md",sourceDirName:"docusaurus-tutorial/basic",slug:"/docusaurus-tutorial/basic/deploy",permalink:"/en/docs/docusaurus-tutorial/basic/deploy",draft:!1,editUrl:"https://github.com/0420syj/0420syj.github.io/tree/master/i18n/en/docusaurus-plugin-content-docs/current/docusaurus-tutorial/basic/deploy.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/en/docs/docusaurus-tutorial/basic/getting-started"},next:{title:"Support for i18n (under construction)",permalink:"/en/docs/docusaurus-tutorial/advanced/i18n"}},u={},l=[{value:"Create a repository",id:"create-a-repository",level:2},{value:"Setting up the repository",id:"setting-up-the-repository",level:2},{value:"Committing your work",id:"committing-your-work",level:2},{value:"Setting up GitHub Actions",id:"setting-up-github-actions",level:2},{value:"Deploy to GitHub Pages",id:"deploy-to-github-pages-1",level:2}],p={toc:l},c="wrapper";function d(t){let{components:e,...r}=t;return(0,i.kt)(c,(0,o.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deploy-to-github-pages"},"Deploy to GitHub Pages"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"content was generated utilizing ChatGPT-4.")),(0,i.kt)("p",null,"Now that we've created our blog, let's deploy it to GitHub Pages."),(0,i.kt)("h2",{id:"create-a-repository"},"Create a repository"),(0,i.kt)("p",null,"After logging in to GitHub, navigate to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/new?repo_name=%3Cusername%3E.github.io"},"New repository")," page."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"<username>")," is the username of your GitHub account.",(0,i.kt)("br",{parentName:"p"}),"\n","Please be sure to correct it.")),(0,i.kt)("p",null,"Enter ",(0,i.kt)("inlineCode",{parentName:"p"},"<username>.github.io")," for the repository name, and press the Create repository button to create the repository."),(0,i.kt)("h2",{id:"setting-up-the-repository"},"Setting up the repository"),(0,i.kt)("p",null,"Go to the ",(0,i.kt)("strong",{parentName:"p"},"Settings")," tab of the created repository."),(0,i.kt)("p",null,"Go to ",(0,i.kt)("strong",{parentName:"p"},"Code and automation > Actions > General > Workflow permissions"),".\nChange ",(0,i.kt)("strong",{parentName:"p"},"Workflow permissions")," to ",(0,i.kt)("strong",{parentName:"p"},"Read and write permissions"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"permissions-setting",src:n(8171).Z,title:"permissions-setting",width:"696",height:"315"})),(0,i.kt)("p",null,"Press the Save button to save the settings."),(0,i.kt)("h2",{id:"committing-your-work"},"Committing your work"),(0,i.kt)("p",null,"Push your project.\n",(0,i.kt)("inlineCode",{parentName:"p"},"<your-github-username>")," is the username of your GitHub account."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git init\ngit add .\ngit commit -m "Initial commit"\ngit branch -M main\ngit remote add origin https://github.com/<your-github-username>/<your-github-username>.github.io.git\ngit push -u origin main\n')),(0,i.kt)("p",null,"You can now see your project in the main branch."),(0,i.kt)("h2",{id:"setting-up-github-actions"},"Setting up GitHub Actions"),(0,i.kt)("p",null,"Set up your project to deploy automatically using GitHub Actions.\nEvery time you push to the main branch, it will be deployed to GitHub Pages."),(0,i.kt)("p",null,"To do this, create a ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/")," folder in your root directory and write a ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy.yml")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deploy to GitHub Pages\n\non:\n  Push:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: yarn\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Build website\n        run: yarn build\n\n      # Popular action to deploy to GitHub Pages:\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          # Build output to publish to the `gh-pages` branch:\n          publish_dir: ./build\n          # The following lines assign commit authorship to the official\n          # GH-Actions bot for deploys to `gh-pages` branch:\n          # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n          # The GH actions bot is used by default if you didn't specify the two fields.\n          # You can swap them out with your own user credentials.\n          user_name: github-actions[bot]\n          user_email: 41898282+github-actions[bot]@users.noreply.github.com\n")),(0,i.kt)("h2",{id:"deploy-to-github-pages-1"},"Deploy to GitHub Pages"),(0,i.kt)("p",null,"You can now use GitHub Actions to deploy to GitHub Pages."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "Add GitHub Actions configuration"\ngit push\n')),(0,i.kt)("p",null,"Once you've done all of this, your blog will be accessible at ",(0,i.kt)("inlineCode",{parentName:"p"},"https://<your-github-username>.github.io"),". To write a new blog post, simply add a new Markdown file to your my-blog/blog folder and push the changes to your repository."),(0,i.kt)("p",null,"You have now successfully created a GitHub.io blog using Docusaurus! Start writing new posts, grow your blog, and share it!"))}d.isMDXComponent=!0},8171:(t,e,n)=>{n.d(e,{Z:()=>o});const o=n.p+"assets/images/permissions-setting-cb879ff237b3dedabf7a4243da815d40.png"}}]);