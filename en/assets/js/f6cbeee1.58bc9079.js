"use strict";(self.webpackChunk_0420_syj_github_io=self.webpackChunk_0420_syj_github_io||[]).push([[3836],{4641:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"js-event-loop","metadata":{"permalink":"/en/blog/js-event-loop","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/blog/2023-04-25-js-event-loop/index.md","source":"@site/blog/2023-04-25-js-event-loop/index.md","title":"(JS) Event Loop\uc640 \ube44\ub3d9\uae30 \ud83d\udd01","description":"js-event-loop \uc815\ub9ac","date":"2023-04-25T00:00:00.000Z","formattedDate":"April 25, 2023","tags":[{"label":"javascript","permalink":"/en/blog/tags/javascript"},{"label":"event loop","permalink":"/en/blog/tags/event-loop"},{"label":"asynchronous","permalink":"/en/blog/tags/asynchronous"}],"readingTime":6.79,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"js-event-loop","title":"(JS) Event Loop\uc640 \ube44\ub3d9\uae30 \ud83d\udd01","description":"js-event-loop \uc815\ub9ac","image":"./images/preview.png","authors":["wannysim"],"tags":["javascript","event loop","asynchronous"],"enableComments":true},"nextItem":{"title":"Typescript\ub85c \uc0dd\uac01\ud574\ubcf4\ub294 SOLID \uc6d0\uce59 \u2696\ufe0f","permalink":"/en/blog/solid-with-typescript"}},"content":"Single Threaded Language\uc778 Javascript\uc5d0\uc11c \ube44\ub3d9\uae30 \ucc98\ub9ac\ub97c \ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 Event Loop\uc640 \ud568\uaed8 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \uc2dc\uc791\ud558\uae30\uc5d0 \uc55e\uc11c \ud83d\udcdd\\n\\nJavascript\ub294 \uc6f9 \uac1c\ubc1c\uc5d0 \ub110\ub9ac \uc0ac\uc6a9\ub418\uc9c0\ub9cc, \uc2f1\uae00 \uc2a4\ub808\ub4dc\uc774\uae30 \ub54c\ubb38\uc5d0 \uc62c\ubc14\ub974\uac8c \uad00\ub9ac\ud558\uc9c0 \uc54a\uc73c\uba74 \uc131\ub2a5 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae00\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \ud55c\uacc4\ub97c \uadf9\ubcf5\ud558\uae30 \uc704\ud574 Javascript\uac00 Event Loop\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube44\ub3d9\uae30 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.\\n\\n## \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uc774\ub780? \ud83e\udd14\\n\\n\uc124\uba85\ud558\uae30\uc5d0 \uc55e\uc11c \ucf54\ub4dc \uc2e4\ud589 \ubc29\uc2dd\uc5d0 \ub300\ud55c 2\uac00\uc9c0 \uc811\uadfc \ubc29\uc2dd\uc778 \ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uacfc \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n- **\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d** : \ud55c \uc791\uc5c5\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub838\ub2e4\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \uc2dc\uc791\\n- **\ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d** : \uc5ec\ub7ec \uc791\uc5c5\uc744 \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\\n\\n\ub370\uc774\ud130 fetching, \uc720\uc800 input \ucc98\ub9ac, DOM \uc5c5\ub370\uc774\ud2b8\uc640 \uac19\uc740 \uc791\uc5c5\uc5d0 \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04\uc774 \uc18c\uc694\ub420 \uc218 \uc788\ub294 \uc6f9\uc744 \uac1c\ubc1c\ud558\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. Javascript\ub294 \uc791\uc5c5 \uc2e4\ud589\uacfc \ucf5c\ubc31\uc744 \uad00\ub9ac\ud558\ub294 Event Loop\ub97c \uc0ac\uc6a9\ud574 \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4.\\n\\n## Event Loop \uc790\uc138\ud788 \uc774\ud574\ud558\uae30 \ud83d\udd01\\n\\nEvent Loop\ub294 Javascript \ub7f0\ud0c0\uc784 \ud658\uacbd\uc758 \uc911\uc694\ud55c \ubd80\ubd84\uc785\ub2c8\ub2e4. Event Loop\ub294 \ucf54\ub4dc \uc2e4\ud589, \uc774\ubca4\ud2b8 \ucc98\ub9ac, \ucf5c\ubc31\uc744 non-blocking \ubc29\uc2dd\uc73c\ub85c \uad00\ub9ac\ud569\ub2c8\ub2e4.\\n\\nEvent Loop\uc5d0\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc131 \uc694\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4:\\n\\n:::note Event Loop\uc758 \uad6c\uc131 \uc694\uc18c\\n\\n1. **Call Stack**: Javascript \uc5d4\uc9c4\uc740 \ud568\uc218 \ud638\ucd9c\uc744 \uc120\uc785\uc120\ucd9c(LIFO) \uc21c\uc11c\ub85c \uc5ec\uae30\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. \ud568\uc218\ub294 \ud638\ucd9c\ub420 \ub54c \uc2a4\ud0dd\uc5d0 \ucd94\uac00\ub418\uace0 \uc644\ub8cc\ub418\uba74 \uc81c\uac70\ub429\ub2c8\ub2e4.\\n\\n2. **Callback Queue:** \\"\uc791\uc5c5 Queue\\" \ub610\ub294 \\"\uba54\uc2dc\uc9c0 Queue\\"\ub77c\uace0\ub3c4 \ud558\uba70, \uc644\ub8cc\ub41c \ube44\ub3d9\uae30 \uc791\uc5c5 \ucf5c\ubc31\uc774 \uc800\uc7a5\ub418\ub294 \uacf3\uc785\ub2c8\ub2e4. \ucf5c\ubc31\uc740 \ucd94\uac00\ub41c \uc21c\uc11c\ub300\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4.\\n\\n3. **Web API:** `setTimeout`, `fetch`, `addEventListener`\uc640 \uac19\uc740 \ube0c\ub77c\uc6b0\uc800 \uc81c\uacf5 API\ub294 \ube44\ub3d9\uae30 \uc791\uc5c5\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. Javascript \uc5d4\uc9c4\uacfc\ub294 \ubcc4\uac1c\uc774\uc9c0\ub9cc Event Loop\uc640 \uae34\ubc00\ud558\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4.\\n\\n4. **Microtask Queue:** \uc774 Queue\ub294 \ud504\ub85c\ubbf8\uc2a4 \ubc0f `MutationObserver` \ucf5c\ubc31 \uac19\uc740 \\"Microtask\\"\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Microtask Queue\ub294 Callback Queue\ubcf4\ub2e4 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc73c\uba70, Call Stack\uc758 \uac01 \uc791\uc5c5 \uc774\ud6c4\uc5d0 \ucc98\ub9ac\ub429\ub2c8\ub2e4.\\n\\n:::\\n\\nEvent Loop\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\ub3d9\ud569\ub2c8\ub2e4:\\n\\n:::info Event Loop\uc758 \uc791\ub3d9 \ubc29\uc2dd\\n\\n1. Javascript \uc5d4\uc9c4\uc774 Call Stack\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4.\\n2. \ube44\ub3d9\uae30 \uc791\uc5c5\uc740 \uac01 Web API\ub85c off-load \ub429\ub2c8\ub2e4.\\n3. \uc644\ub8cc\ub41c \ube44\ub3d9\uae30 \uc791\uc5c5 \ucf5c\ubc31\uc774 Callback Queue\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4.\\n4. Event Loop\ub294 Call Stack\uc774 \ube44\uc6cc\uc9c4 \ud6c4 Microtask Queue\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4.\\n5. Event Loop\ub294 Callback Queue\ub97c \ucc98\ub9ac\ud558\uc5ec \uac01 \ucf5c\ubc31\uc744 \uc21c\uc11c\ub300\ub85c \uc2e4\ud589\ud569\ub2c8\ub2e4.\\n\\n```mermaid {theme: \\"forest\\"}\\n1. Call Stack           2. Web APIs\\n   ----------              --------\\n   |        | ---Async---\x3e |      |\\n   ----------              --------\\n   |        |              |      |\\n   ----------              --------\\n        |                      |\\n        |                      |\\n        v                      v\\n3. Microtask Queue    4. Callback Queue\\n   ---------------       -------------\\n   |             | <---- |           |\\n   ---------------       -------------\\n   |             |       |           |\\n   ---------------       -------------\\n```\\n\\n:::\\n\\n\uc774 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 Javascript \uc5d4\uc9c4\uc740 \ube44\ub3d9\uae30 \uc791\uc5c5\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc791\uc5c5\uc744 \uacc4\uc18d \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n## Node.js\uc640 \ube0c\ub77c\uc6b0\uc800\uc758 Event Loop \ud83c\udf10\\n\\nNode.js\uc640 \ube0c\ub77c\uc6b0\uc800 \ubaa8\ub450 Event Loop\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube44\ub3d9\uae30 \ucf54\ub4dc \uc2e4\ud589\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uba87 \uac00\uc9c0 \ucc28\uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4:\\n\\n:::note Node.js\uc640 \ube0c\ub77c\uc6b0\uc800\uc758 Event Loop \ucc28\uc774\uc810\\n\\n1. **Web API\uc640 Timer:** \ube0c\ub77c\uc6b0\uc800\ub294 \uc6f9 API \uc138\ud2b8\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, Node.js\ub294 \uc790\uccb4 API\uc640 \ud0c0\uc774\uba38(`setImmediate`, `process.nextTick` \ub4f1)\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc694 \ucc28\uc774\uc810\uc740 \uac01 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c API\uc785\ub2c8\ub2e4.\\n\\n2. **Concurrency \ubaa8\ub378:** \ube0c\ub77c\uc6b0\uc800\ub294 \uc6f9 \uc6cc\ucee4 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcc4\ub3c4\uc758 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \ucf54\ub4dc\ub97c \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4. \ubc18\uba74 Node.js\ub294 \ube44\uc2b7\ud55c \ub3d9\uc2dc\uc131\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud574 \uc6cc\ucee4 \uc2a4\ub808\ub4dc \ubaa8\ub4c8\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\\n\\n3. **Event-Driven \uc544\ud0a4\ud14d\ucc98:** Node.js\uc640 \ube0c\ub77c\uc6b0\uc800 \ubaa8\ub450 \uc774\ubca4\ud2b8\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0 \uc218\uc2e0\ud558\ub294 \uc774\ubca4\ud2b8 \uc8fc\ub3c4 \uc544\ud0a4\ud14d\ucc98\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc774\ubca4\ud2b8\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc720\uc800 \uc0c1\ud638\uc791\uc6a9\uacfc \uad00\ub828\uc774 \uc788\uc73c\uba70, Node.js\uc5d0\uc11c\ub294 I/O \uc791\uc5c5\uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n4. **Event Loop \uad6c\ud604:** \ube0c\ub77c\uc6b0\uc800\ub294 HTML5 \uc0ac\uc591\uc744 \uc0ac\uc6a9\ud558\uba70, Node.js\ub294 libuv \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c \ud55c \uc790\uccb4 \ud06c\ub85c\uc2a4 \ud50c\ub7ab\ud3fc Event Loop \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucc28\uc774\uc810\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 Event Loop\uc758 \uc804\ubc18\uc801\uc778 \ub3d9\uc791 \ubc0f \uae30\ub2a5\uc740 \ub450 \ud658\uacbd\uc5d0\uc11c \ud06c\uac8c \ub3d9\uc77c\ud569\ub2c8\ub2e4.\\n\\n:::\\n\\n|                       | \ube0c\ub77c\uc6b0\uc800            | Node.js                    |\\n| --------------------- | ------------------- | -------------------------- |\\n| Web API\uc640 Timer       | Web API             | \uc790\uccb4 API\uc640 \ud0c0\uc774\uba38          |\\n| Concurrency \ubaa8\ub378      | Web Workers API     | Worker Threads module      |\\n| Event-Driven \uc544\ud0a4\ud14d\ucc98 | User Interface      | I/O operations             |\\n| Event Loop \uad6c\ud604       | HTML5 specification | Built on the libuv library |\\n\\n## \uacb0\ub860 \ud83c\udfc1\\n\\nEvent Loop\ub294 Javascript \uc5b8\uc5b4 \ub7f0\ud0c0\uc784 \ud658\uacbd\uc758 \uae30\ubcf8\uc801\uc778 \ubd80\ubd84\uc774\uae30 \ub54c\ubb38\uc5d0 Javascript \uac1c\ubc1c\uc790\uc5d0\uac8c Event Loop\ub97c \uc774\ud574\ud558\ub294 \uac83\uc740 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. Event Loop\uc640 \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \ub9c8\uc2a4\ud130\ud558\uba74 \ub6f0\uc5b4\ub09c \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc81c\uacf5\ud558\ub294 \ubc18\uc751\uc131\uc774 \ub6f0\uc5b4\ub098\uace0 \ud6a8\uc728\uc801\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."},{"id":"solid-with-typescript","metadata":{"permalink":"/en/blog/solid-with-typescript","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/blog/2023-04-19-solid-with-typescript/index.md","source":"@site/blog/2023-04-19-solid-with-typescript/index.md","title":"Typescript\ub85c \uc0dd\uac01\ud574\ubcf4\ub294 SOLID \uc6d0\uce59 \u2696\ufe0f","description":"Typesciprt\ub97c \ud1b5\ud574 SOLID \uc6d0\uce59\uc5d0 \ub300\ud574 \uc815\ub9ac\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4.","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[{"label":"typescript","permalink":"/en/blog/tags/typescript"},{"label":"solid","permalink":"/en/blog/tags/solid"},{"label":"coupling","permalink":"/en/blog/tags/coupling"},{"label":"cohesion","permalink":"/en/blog/tags/cohesion"}],"readingTime":12.945,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"solid-with-typescript","title":"Typescript\ub85c \uc0dd\uac01\ud574\ubcf4\ub294 SOLID \uc6d0\uce59 \u2696\ufe0f","description":"Typesciprt\ub97c \ud1b5\ud574 SOLID \uc6d0\uce59\uc5d0 \ub300\ud574 \uc815\ub9ac\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4.","image":"./images/preview.png","authors":["wannysim"],"tags":["typescript","solid","coupling","cohesion"],"enableComments":true},"prevItem":{"title":"(JS) Event Loop\uc640 \ube44\ub3d9\uae30 \ud83d\udd01","permalink":"/en/blog/js-event-loop"},"nextItem":{"title":"(JS) Closure\uc640 Method Chaining \ud83d\udd17","permalink":"/en/blog/js-closure-and-method-chaining"}},"content":"Typesciprt\ub97c \ud1b5\ud574 SOLID \uc6d0\uce59\uc5d0 \ub300\ud574 \uc815\ub9ac\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4.\\n\\n\x3c!-- truncate --\x3e\\n\\n## SOLID \uc6d0\uce59\uc740 \uc65c \uc911\uc694\ud560\uae4c? \ud83e\udd14\\n\\n**SOLID \uc6d0\uce59**\uc740 \uc720\uc9c0\ubcf4\uc218, \ud655\uc7a5 \ubc0f \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \uad6c\uc870\ud654\ub41c \uc2dc\uc2a4\ud15c\uc744 \ub9cc\ub4dc\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ubbc0\ub85c SW \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c \ub9e4\uc6b0 \uc911\uc694\ud569\ub2c8\ub2e4. \ud2b9\ud788 \ubaa8\ub4e0 \uc544\ud0a4\ud14d\ucc98\uc758 \uac00\uc7a5 \uc911\uc694\ud55c 2\uac00\uc9c0 \uce21\uba74\uc778 **\uacb0\ud569\ub3c4(coupling)\uc640 \uc751\uc9d1\ub3c4(cohesion)**\uc5d0 \uc9c1\uc811\uc801\uc778 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4.\\n\\n### \uacb0\ud569\ub3c4(coupling) \u23ec\\n\\n\ubaa8\ub4c8 \uac04\uc758 \uc0c1\ud638 \uc758\uc874\uc131\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uacb0\ud569\ub3c4\uac00 \ub192\ub2e4\ub294 \uac83\uc740 \ud55c \ubaa8\ub4c8\uc744 \ubcc0\uacbd\ud558\uba74 \ud574\ub2f9 \ubaa8\ub4c8\uc5d0 \uc758\uc874\ud558\ub294 \ub2e4\ub978 \ubaa8\ub4c8\ub3c4 \ubcc0\uacbd\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ubc18\uba74\uc5d0 \uacb0\ud569\ub3c4\uac00 \ub0ae\uc73c\uba74 \uac01 \ubaa8\ub4c8\uc774 \ub2e4\ub978 \ubaa8\ub4c8\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc218\uc815\ud558\uac70\ub098 \uad50\uccb4\ud560 \uc218 \uc788\ub294 \ubaa8\ub4c8\ud654 \ub41c \ucf54\ub4dc\uac00 \ub354 \ub9ce\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4.\\n\\n:::info \uad00\ub828 SOLID \uc6d0\uce59\\n\\n- **\uc758\uc874\uc131 \uc5ed\uc804 \uc6d0\uce59(DIP)**: \uad6c\uccb4\uc801\uc778 \uad6c\ud604\uc774 \uc544\ub2cc \ucd94\uc0c1\ud654\uc5d0 \uc758\uc874\ud568\uc73c\ub85c\uc368 \ubaa8\ub4c8\uc740 \uc11c\ub85c \ub354 \ub3c5\ub9bd\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc758\uc874 \uc694\uc18c\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \ubaa8\ub4c8\uc744 \uad50\uccb4\ud558\uac70\ub098 \uc218\uc815\ud558\uae30\uac00 \ub354 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4.\\n- **\uc778\ud130\ud398\uc774\uc2a4 \ubd84\ub9ac \uc6d0\uce59(ISP)**: \ub354 \uc791\uace0 \uc9d1\uc911\ub41c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub798\uc2a4\ub294 \ud544\uc694\ud55c \uae30\ub2a5\uc5d0\ub9cc \uc758\uc874\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ubaa8\ub4c8 \uac04\uc758 \ubd88\ud544\uc694\ud55c \uc758\uc874\uc131\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n:::\\n\\n### \uc751\uc9d1\ub3c4(cohesion) \u23eb\\n\\n\uc751\uc9d1\ub3c4\ub294 \ubaa8\ub4c8\uc758 \ucc45\uc784\uc774 \uc5bc\ub9c8\ub098 \ubc00\uc811\ud558\uac8c \uc5f0\uad00\ub418\uc5b4 \uc788\ub294\uc9c0\ub97c \ub9d0\ud569\ub2c8\ub2e4. \uc751\uc9d1\ub3c4\uac00 \ub192\ub2e4\ub294 \uac83\uc740 \ubaa8\ub4c8\uc5d0 \ub2e8\uc77c \ucc45\uc784\uc774 \uc788\uc5b4 \uc774\ud574\ud558\uace0 \uc720\uc9c0 \uad00\ub9ac\ud558\uae30 \uc27d\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc751\uc9d1\ub3c4\uac00 \ub0ae\uc73c\uba74 \ubaa8\ub4c8\uc5d0 \uc5ec\ub7ec \uac00\uc9c0 \ucc45\uc784\uc774 \uc788\uc5b4 \ucf54\ub4dc\uac00 \ubcf5\uc7a1\ud558\uace0 \uc720\uc9c0\ubcf4\uc218\uac00 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n:::info \uad00\ub828 SOLID \uc6d0\uce59\\n\\n- **\ub2e8\uc77c \ucc45\uc784 \uc6d0\uce59(SRP)**: \uac01 \ud074\ub798\uc2a4\uac00 \ud558\ub098\uc758 \ucc45\uc784\ub9cc \uac16\ub3c4\ub85d \ud568\uc73c\ub85c\uc368 \uac00\ub3c5\uc131, \uc720\uc9c0\ubcf4\uc218 \ubc0f \ud655\uc7a5\uc774 \ub354 \uc26c\uc6b4 \ubcf4\ub2e4 \uc9d1\uc911\uc801\uc774\uace0 \uc751\uc9d1\ub3c4 \uc788\ub294 \ubaa8\ub4c8\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n- **\uac1c\ubc29/\ud3d0\uc1c4 \uc6d0\uce59(OCP)**: \ud074\ub798\uc2a4\ub97c \uc218\uc815 \uc5c6\uc774 \ud655\uc7a5\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ud558\uba74 \uc6d0\ub798 \ud074\ub798\uc2a4\uc758 \ud575\uc2ec \ucc45\uc784\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uae30\uc874 \ubaa8\ub4c8\uc758 \uc77c\uad00\uc131\uc744 \uc720\uc9c0\ud558\uba74\uc11c \uc0c8\ub85c\uc6b4 \uc694\uad6c \uc0ac\ud56d\uc744 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n:::\\n\\nSOLID \uc6d0\uce59\uc744 \ub530\ub974\uba74 \uacb0\ud569\ub3c4\ub294 \ub0ae\uace0 \uc751\uc9d1\ub3c4\ub294 \ub192\uc740 \uc544\ud0a4\ud14d\ucc98\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uadf8 \uacb0\uacfc \uc720\uc9c0\ubcf4\uc218\uc640 \ud655\uc7a5\uc774 \uc27d\uace0, \uc720\uc5f0\ud55c \uc2dc\uc2a4\ud15c\uc744 \uad6c\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud2b9\uc131\uc740 \ubcc0\ud654\ud558\ub294 \uc694\uad6c\uc0ac\ud56d\uc5d0 \uc27d\uac8c \uc801\uc751\ud558\uace0 \uc720\uc9c0\ubcf4\uc218 \ube44\uc6a9\uc744 \uc808\uac10\ud558\uba70 \uc804\ubc18\uc801\uc778 \ucf54\ub4dc \ud488\uc9c8\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uac1c\ubc1c\uc5d0 \ud544\uc218\uc801\uc785\ub2c8\ub2e4.\\n\\n\x3c!--\uc5ec\uae30\ubd80\ud130 \uc774\uc5b4\uc11c \uc791\uc131--\x3e\\n\\n## 1. \ub2e8\uc77c \ucc45\uc784 \uc6d0\uce59(SRP) \ud83e\udde9\\n\\n\ud074\ub798\uc2a4\ub294 \ubcc0\uacbd\ud560 \uc774\uc720\uac00 \ud558\ub098\ub9cc \uc788\uc5b4\uc57c \ud558\uba70, \uc774\ub294 \ucc45\uc784\uc774 \ud558\ub098\ub9cc \uc788\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4.\\n\\n### \uc608\uc2dc\\n\\n```ts title=\\"bad.ts\\"\\n// Bad: \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud558\ub294 \ub2e8\uc77c \ud074\ub798\uc2a4\\nclass User {\\n  name: string;\\n  email: string;\\n\\n  constructor(name: string, email: string) {\\n    this.name = name;\\n    this.email = email;\\n  }\\n\\n  saveToDatabase() {\\n    // \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub97c DB\uc5d0 \uc800\uc7a5\ud558\ub294 \ucf54\ub4dc\\n  }\\n}\\n```\\n\\n```ts title=\\"good.ts\\"\\n// Good: \uc5ec\ub7ec \ud074\ub798\uc2a4\ub85c \ucc45\uc784 \ubd84\ub9ac\\nclass User {\\n  name: string;\\n  email: string;\\n\\n  constructor(name: string, email: string) {\\n    this.name = name;\\n    this.email = email;\\n  }\\n}\\n\\nclass UserRepository {\\n  save(user: User) {\\n    // \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub97c DB\uc5d0 \uc800\uc7a5\ud558\ub294 \ucf54\ub4dc\\n  }\\n}\\n```\\n\\n### \uc124\uba85\\n\\n\uc774 \uc608\uc2dc\uc5d0\uc11c `bad.ts`\uc758 `User` \ud074\ub798\uc2a4\ub294 **\uc0ac\uc6a9\uc790 \ub370\uc774\ud130 \uad00\ub9ac**\uc640 **DB \uc800\uc7a5**\uc774\ub77c\ub294 2\uac00\uc9c0 \ucc45\uc784\uc744 \uac16\uc2b5\ub2c8\ub2e4. \uc774\ub294 SRP\ub97c \uc704\ubc18\ud558\ub294 \uac83\uc774\ubbc0\ub85c \uc774 2\uac00\uc9c0 \ucc45\uc784\uc740 `User`\uc640 `UserRepository`\ub77c\ub294 2\uac1c\uc758 \ub2e4\ub978 \ud074\ub798\uc2a4\ub85c \ubd84\ub9ac\ub429\ub2c8\ub2e4. \uc774\uc81c \uac01 \ud074\ub798\uc2a4\ub294 \ud558\ub098\uc758 \ucc45\uc784\ub9cc \uac00\uc9c0\ubbc0\ub85c \uc720\uc9c0\ubcf4\uc218\uc640 \uac00\ub3c5\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4.\\n\\n## 2. \uac1c\ubc29/\ud3d0\uc1c4 \uc6d0\uce59(OCP)\ud83d\udeaa\\n\\n\uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc694\uc18c\ub294 \ud655\uc7a5\uc5d0\ub294 \uc5f4\ub824 \uc788\uc5b4\uc57c \ud558\uace0, \ubcc0\uacbd\uc5d0\ub294 \ub2eb\ud600 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\\n### \uc608\uc2dc\\n\\n```ts title=\\"bad.ts\\"\\n// Bad: \uae30\uc874 \ud074\ub798\uc2a4\ub97c \uc218\uc815\ud558\uc5ec \uc0c8 \ub3c4\ud615 \ucd94\uac00\\nclass AreaCalculator {\\n  calculateArea(shape: \\"circle\\" | \\"square\\", size: number) {\\n    if (shape === \\"circle\\") {\\n      return Math.PI * size * size;\\n    } else if (shape === \\"square\\") {\\n      return size * size;\\n    }\\n  }\\n}\\n```\\n\\n```ts title=\\"good.ts\\"\\n// Good: \ucd94\uc0c1\ud654 \ubc0f \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\ub2a5 \ud655\uc7a5\\nabstract class Shape {\\n  abstract calculateArea(): number;\\n}\\n\\nclass Circle extends Shape {\\n  radius: number;\\n\\n  constructor(radius: number) {\\n    super();\\n    this.radius = radius;\\n  }\\n\\n  calculateArea(): number {\\n    return Math.PI * this.radius * this.radius;\\n  }\\n}\\n\\nclass Square extends Shape {\\n  side: number;\\n\\n  constructor(side: number) {\\n    super();\\n    this.side = side;\\n  }\\n\\n  calculateArea(): number {\\n    return this.side * this.side;\\n  }\\n}\\n\\nclass AreaCalculator {\\n  calculateArea(shape: Shape): number {\\n    return shape.calculateArea();\\n  }\\n}\\n```\\n\\n### \uc124\uba85\\n\\n`bad.ts`\uc758 `AreaCalculator` \ud074\ub798\uc2a4\ub294 if-else\ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ub3c4\ud615\uc758 \uba74\uc801\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. \uc0c8 \ub3c4\ud615\uc744 \ucd94\uac00\ud558\ub824\uba74 \uae30\uc874 \ud074\ub798\uc2a4\ub97c \uc218\uc815\ud574\uc57c \ud558\ub294\ub370, \uc774\ub294 OCP\ub97c \uc704\ubc18\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\\n\\n\ub9ac\ud329\ud1a0\ub9c1\ub41c `good.ts`\ub294 \ucd94\uc0c1\ud654 \ub41c `calculateArea()`\uac00 \uc788\ub294 \ucd94\uc0c1\ud654 \ub41c `Shape` \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. `Circle` \ubc0f `Square` \ud074\ub798\uc2a4\ub294 `Shape`\uc5d0\uc11c \uc0c1\uc18d\ub418\uc5b4, `calculateArea()`\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. \uc774\uc81c \uc0c8 \ub3c4\ud615\uc744 \ucd94\uac00\ud558\ub354\ub77c\ub3c4 `AreaCalculator` \ud074\ub798\uc2a4\ub97c \uc218\uc815\ud558\uc9c0 \uc54a\uace0, `Shape`\ub97c \ud655\uc7a5\ud558\ub294 \uc0c8 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n## 3. \ub9ac\uc2a4\ucf54\ud504 \uce58\ud658 \uc6d0\uce59(LSP) \ud83d\udd04\\n\\n\uc0c1\uc704 \ud0c0\uc785\uc758 \uac1d\uccb4\ub97c \ud558\uc704 \ud0c0\uc785\uc758 \uac1d\uccb4\ub85c \uce58\ud658\ud574\ub3c4, \uc0c1\uc704 \ud0c0\uc785\uc744 \uc0ac\uc6a9\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc740 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud574\uc57c \ud55c\ub2e4.\\n\\n### \uc608\uc2dc\\n\\n```ts title=\\"bad.ts\\"\\nclass Bird {\\n  fly(): void {\\n    console.log(\\"I can fly\\");\\n  }\\n}\\n\\nclass Pigeon extends Bird {}\\n\\nclass Ostrich extends Bird {\\n  fly(): never {\\n    throw new Error(\\"I can\'t fly\\");\\n  }\\n}\\n\\n// Bad: Ostrich\ub294 Bird\uc758 \ud558\uc704 \ud0c0\uc785\uc774 \ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\\nconst bird: Bird = new Ostrich();\\nbird.fly(); // Throws an error\\n```\\n\\n```ts title=\\"good.ts\\"\\n// Good: \ub3d9\uc791\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ud074\ub798\uc2a4\ub85c \ubd84\ub9ac\\nclass Bird {}\\n\\nclass FlyingBird extends Bird {\\n  fly(): void {\\n    console.log(\\"I can fly\\");\\n  }\\n}\\n\\nclass NonFlyingBird extends Bird {}\\n\\nclass Pigeon extends FlyingBird {}\\nclass Ostrich extends NonFlyingBird {}\\n```\\n\\n### \uc124\uba85\\n\\n`bad.ts`\uc5d0\uc11c `Ostrich` \ud074\ub798\uc2a4\ub294 `fly()`\uac00 \uc788\ub294 `Bird`\ub97c \uc0c1\uc18d\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 `Ostrich`\ub294 \ub0a0 \uc218 \uc5c6\uc73c\ubbc0\ub85c LSP\ub97c \uc704\ubc18\ud569\ub2c8\ub2e4.\\n\\n\ub9ac\ud329\ud1a0\ub9c1\ub41c `good.ts`\ub294 `Bird` \ud074\ub798\uc2a4\ub97c `FlyingBird`\uc640 `NonFlyingBird`\ub85c \ubd84\ub9ac\ud569\ub2c8\ub2e4. \uc774\uc81c `Ostrich` \ud074\ub798\uc2a4\ub294 `Pigeon` \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud558\uace0, `Pigeon`\uc640 `Ostrich` \ubaa8\ub450 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0a4\uc9c0 \uc54a\uace0 \uac01\uac01\uc758 \uae30\ubcf8 \ud074\ub798\uc2a4\ub97c \ub300\uccb4\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c LSP\uac00 \uc720\uc9c0\ub429\ub2c8\ub2e4.\\n\\n## 4. \uc778\ud130\ud398\uc774\uc2a4 \ubd84\ub9ac \uc6d0\uce59(ISP) \u2797\\n\\n\uc778\ud130\ud398\uc774\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \ud544\uc694\ud55c \uac83\ub9cc \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc989, \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc790\uc2e0\uc774 \uc0ac\uc6a9\ud558\ub294 \uba54\uc11c\ub4dc\uc5d0\ub9cc \uc758\uc874\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n### \uc608\uc2dc\\n\\n```ts {22-24} title=\\"bad.ts\\"\\n// Bad: \uc5ec\ub7ec \ucc45\uc784\uc744 \ud558\ub098\uc758 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud3ec\ud568\\ninterface Worker {\\n  work(): void;\\n  eat(): void;\\n}\\n\\nclass Human implements Worker {\\n  work(): void {\\n    console.log(\\"I am working\\");\\n  }\\n\\n  eat(): void {\\n    console.log(\\"I am eating\\");\\n  }\\n}\\n\\nclass Robot implements Worker {\\n  work(): void {\\n    console.log(\\"I am working\\");\\n  }\\n\\n  eat(): void {\\n    throw new Error(\\"I can\'t eat\\");\\n  }\\n}\\n```\\n\\n```ts title=\\"good.ts\\"\\n// Good: \uc11c\ub85c \ub2e4\ub978 \uc778\ud130\ud398\uc774\uc2a4\ub85c \ucc45\uc784 \ubd84\ub9ac\\ninterface Worker {\\n  work(): void;\\n}\\n\\ninterface Eater {\\n  eat(): void;\\n}\\n\\nclass Human implements Worker, Eater {\\n  work(): void {\\n    console.log(\\"I am working\\");\\n  }\\n\\n  eat(): void {\\n    console.log(\\"I am eating\\");\\n  }\\n}\\n\\nclass Robot implements Worker {\\n  work(): void {\\n    console.log(\\"I am working\\");\\n  }\\n}\\n```\\n\\n### \uc124\uba85\\n\\n`bat.ts`\uc758 `Worker` \uc778\ud130\ud398\uc774\uc2a4\ub294 `work()`\uc640 `eat()`\ub97c \ub458 \ub2e4 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 `Robot` \ud074\ub798\uc2a4\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 `eat()`\uc744 \uac15\uc81c\ub85c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n\ub9ac\ud329\ud1a0\ub9c1\ub41c `good.ts`\ub294 `Worker` \uc778\ud130\ud398\uc774\uc2a4\ub97c `Worker`\uc640 `Eater`\ub77c\ub294 \ub450 \uac1c\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub85c \ubd84\ub9ac\ud569\ub2c8\ub2e4. \uc774\uc81c `Robot` \ud074\ub798\uc2a4\ub294 `Worker` \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uad6c\ud604\ud558\uba74 \ub418\uace0, `Human` \ud074\ub798\uc2a4\ub294 `Worker`\uc640 `Eater` \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubaa8\ub450 \uad6c\ud604\ud569\ub2c8\ub2e4. \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uba54\uc11c\ub4dc\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub418\ubbc0\ub85c ISP\ub97c \uc900\uc218\ud569\ub2c8\ub2e4.\\n\\n## 5. \uc758\uc874\uc131 \uc5ed\uc804 \uc6d0\uce59(DIP) \ud83d\udd00\\n\\n\uace0\uc218\uc900 \ubaa8\ub4c8\uc740 \uc800\uc218\uc900 \ubaa8\ub4c8\uc5d0 \uc758\uc874\ud574\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \ub458 \ub2e4 \ucd94\uc0c1\ud654\uc5d0 \uc758\uc874\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd94\uc0c1\ud654\ub294 \uc800\uc218\uc900\uc5d0 \uc758\uc874\ud574\uc11c\ub294 \uc548 \ub418\uace0, \uc800\uc218\uc900\uc740 \ucd94\uc0c1\ud654\uc5d0 \uc758\uc874\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n:::info \uc6a9\uc5b4 \uc124\uba85\\n\\n- \uace0\uc218\uc900 \ubaa8\ub4c8 : \uc778\ud130\ud398\uc774\uc2a4\uc640 \uac19\uc740 \uac1d\uccb4\uc758 \uc0c1\uc704 \uc218\uc900\uc5d0 \uc704\uce58\ud558\ub294 \ucd94\uc0c1\uc801\uc778 \ubaa8\ub4c8\\n- \uc800\uc218\uc900 \ubaa8\ub4c8 : \uad6c\uccb4\uc801\uc778 \uad6c\ud604\uc744 \ud3ec\ud568\ud558\ub294 \ubaa8\ub4c8\\n\\n:::\\n\\n### \uc608\uc2dc\\n\\n```ts title=\\"bad.ts\\"\\n// Bad: \uace0\uc218\uc900 \ubaa8\ub4c8(ContentProcessor)\uc774 \uc800\uc218\uc900 \ubaa8\ub4c8(FileReader)\uc5d0 \uc758\uc874\ud569\ub2c8\ub2e4. (DIP \uc704\ubc18)\\nclass FileReader {\\n  read(): string {\\n    // Read from a file\\n    return \\"file content\\";\\n  }\\n}\\n\\nclass ContentProcessor {\\n  process(reader: FileReader): void {\\n    const content = reader.read();\\n    console.log(\\"Processing:\\", content);\\n  }\\n}\\n```\\n\\n```ts title=\\"good.ts\\"\\n// Good: \uace0\uc218\uc900 \ubaa8\ub4c8(ContentProcessor)\uc774 \uc800\uc218\uc900 \ubaa8\ub4c8(FileReader)\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (DIP \uc900\uc218)\\ninterface IReader {\\n  read(): string;\\n}\\n\\nclass FileReader implements IReader {\\n  read(): string {\\n    // Read from a file\\n    return \\"file content\\";\\n  }\\n}\\n\\nclass ContentProcessor {\\n  process(reader: IReader): void {\\n    const content = reader.read();\\n    console.log(\\"Processing:\\", content);\\n  }\\n}\\n```\\n\\n### \uc124\uba85\\n\\n`bad.ts`\uc5d0\uc11c `ContentProcessor` \ud074\ub798\uc2a4\ub294 `FileReader` \ud074\ub798\uc2a4\uc5d0 \uc758\uc874\ud569\ub2c8\ub2e4. \uc774\ub294 \uace0\uc218\uc900 \ubaa8\ub4c8\uc774 \uc800\uc218\uc900 \ubaa8\ub4c8\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c DIP\ub97c \uc704\ubc18\ud569\ub2c8\ub2e4.\\n\\n\ub9ac\ud329\ud1a0\ub9c1\ub41c `good.ts`\uc5d0\uc11c\ub294 `IReader` \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud558\uace0, `FileReader` \ud074\ub798\uc2a4\ub294 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. \uc774\uc81c `ContentProcessor` \ud074\ub798\uc2a4\ub294 `IReader` \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc758\uc874\ud558\ubbc0\ub85c DIP\ub97c \uc900\uc218\ud569\ub2c8\ub2e4.\\n\\n## \ub9c8\uce58\uba70 \ud83c\udfc1\\n\\nSOLID \uc6d0\uce59\uc740 \uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \uc6d0\uce59\uc785\ub2c8\ub2e4. \uc774 \uc6d0\uce59\uc744 \uc798 \uc9c0\ud0a4\uba74 \ucf54\ub4dc\uc758 \uc720\uc9c0\ubcf4\uc218\uc131\uc774 \ub192\uc544\uc9c0\uace0, \ucf54\ub4dc\uc758 \uc7ac\uc0ac\uc6a9\uc131\uc774 \ub192\uc544\uc9c0\uba70, \ucf54\ub4dc\uc758 \ud655\uc7a5\uc131\uc774 \ub192\uc544\uc9d1\ub2c8\ub2e4.\\n\\n\uc800\ub3c4 \uc5ec\uc804\ud788 SOLID \uc6d0\uce59\uc744 \uc798 \uc9c0\ud0a4\uc9c0 \ubabb\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774 \uae00\uc744 \uc4f0\uba74\uc11c\ub3c4 \ub9ce\uc774 \ubc18\uc131\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc55e\uc73c\ub85c \uacb0\ud569\ub3c4\uc640 \uc751\uc9d1\ub3c4\uc5d0 \ub300\ud574 \ud56d\uc0c1 \uace0\ubbfc\ud558\uace0, SOLID \uc6d0\uce59\uc744 \ub5a0\uc62c\ub9ac\uba70 \ucf54\ub4dc\ub97c \uc791\uc131\ud574\uc57c\uaca0\uc2b5\ub2c8\ub2e4!"},{"id":"js-closure-and-method-chaining","metadata":{"permalink":"/en/blog/js-closure-and-method-chaining","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/blog/2023-04-18-js-closure-and-method-chaining/index.md","source":"@site/blog/2023-04-18-js-closure-and-method-chaining/index.md","title":"(JS) Closure\uc640 Method Chaining \ud83d\udd17","description":"LG\uc720\ud50c\ub7ec\uc2a4\uc5d0\uc11c 1\ub144 4\uc6d4\ub3d9\uc548 \uc7ac\uc9c1\ud558\uba70, Javascript\uc758 \uac00\ub3c5\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uace0\ubbfc\ud588\uc2b5\ub2c8\ub2e4.","date":"2023-04-18T00:00:00.000Z","formattedDate":"April 18, 2023","tags":[{"label":"javascript","permalink":"/en/blog/tags/javascript"},{"label":"closure","permalink":"/en/blog/tags/closure"},{"label":"method chaining","permalink":"/en/blog/tags/method-chaining"},{"label":"solid","permalink":"/en/blog/tags/solid"}],"readingTime":10.33,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"js-closure-and-method-chaining","title":"(JS) Closure\uc640 Method Chaining \ud83d\udd17","description":"LG\uc720\ud50c\ub7ec\uc2a4\uc5d0\uc11c 1\ub144 4\uc6d4\ub3d9\uc548 \uc7ac\uc9c1\ud558\uba70, Javascript\uc758 \uac00\ub3c5\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uace0\ubbfc\ud588\uc2b5\ub2c8\ub2e4.","image":"./images/preview.png","authors":["wannysim"],"tags":["javascript","closure","method chaining","solid"],"enableComments":true},"prevItem":{"title":"Typescript\ub85c \uc0dd\uac01\ud574\ubcf4\ub294 SOLID \uc6d0\uce59 \u2696\ufe0f","permalink":"/en/blog/solid-with-typescript"},"nextItem":{"title":"TypeScript Basic\ud83d\udc24","permalink":"/en/blog/typescript-basic"}},"content":"LG\uc720\ud50c\ub7ec\uc2a4\uc5d0\uc11c 1\ub144 4\uc6d4\ub3d9\uc548 \uc7ac\uc9c1\ud558\uba70, Javascript\uc758 \uac00\ub3c5\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uace0\ubbfc\ud588\uc2b5\ub2c8\ub2e4.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \uc2dc\uc791\ud558\uae30\uc5d0 \uc55e\uc11c \ud83d\udcdd\\n\\n\ub2f9\uc2dc \uac1c\ubc1c\ud658\uacbd\uc774 \ub9e4\uc6b0 \ud2b9\uc774\ud558\uace0, \uc5b4\ub824\uc6b4 \uc810\uc774 \ub9ce\uc558\uc2b5\ub2c8\ub2e4.\\n\\n### \ub2f9\uc2dc \uac1c\ubc1c\ud658\uacbd\\n\\nI\ubaa8 \uc5c5\uccb4\uc758 SPA\uae30\ubc18 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uc600\uace0, XML \ud30c\uc77c \uc548\uc5d0\uc11c JS\ub85c\uc9c1\uc744 \uac1c\ubc1c\ud558\ub294 \ubc29\uc2dd\uc774\uc600\uc2b5\ub2c8\ub2e4.\\n\ube0c\ub77c\uc6b0\uc800\ub3c4 \uac19\uc740 \uc5c5\uccb4\uc5d0\uc11c \uac1c\ubc1c\ud55c Chrome \uae30\ubc18\uc758 \uac83\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.\\n\\n\uc62c 3\uc6d4 \uae30\uc900 Chrome 92 \uae30\ubc18\uc774 \ucd5c\uc2e0\uc774\uc600\uc2b5\ub2c8\ub2e4.\\nIDE\ub294 Spring Tool Suite\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.\\n\\n### \ubb38\uc81c\uc810\\n\\n- Syntax \uc790\ub3d9\uc644\uc131 \ubd88\uac00 (4\uc6d4\ucbe4\ubd80\ud130 \uc9c0\uc6d0)\\n- VS code \uc0ac\uc6a9\ubd88\uac00 (Editor\ub85c\uc368\ub9cc \uc0ac\uc6a9\uac00\ub2a5)\\n- \uadf8\ub4e4\ub9cc\uc758 Data \uad6c\uc870\\n- \uadf8\ub4e4\ub9cc\uc758 API\\n- \ub2e8\uc704\ud14c\uc2a4\ud2b8 \u274c\\n- \ud1b5\ud569\ud14c\uc2a4\ud2b8 \u274c\\n\\n\uc694\uc57d\ud574\uc11c \ub9d0\ud558\uc790\uba74, \uc720\uc9c0\ubcf4\uc218\uac00 \ub9e4\uc6b0 \uc5b4\ub824\uc6b4 \ud658\uacbd\uc774\uc5c8\uc2b5\ub2c8\ub2e4.\\n\\n### \ud574\uacb0\ubc29\ubc95\\n\\n\ucf54\ub4dc \uc804\uccb4\uac00 \uce74\uc624\uc2a4\ub85c \ud5a5\ud558\uae30 \uc804\uc5d0, \ub9ac\ud329\ud1a0\ub9c1\uc744 \ud1b5\ud574 \uac00\ub3c5\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uace0\ubbfc\ud574\ubd24\uc2b5\ub2c8\ub2e4.\\n\\n## 1. Closure \ud83d\udce6\\n\\n### \uac1c\ub150\\n\\nClosure\ub294 \uc678\ubd80 \ud568\uc218\uac00 \uc2e4\ud589\uc744 \uc644\ub8cc\ud55c \ud6c4\uc5d0\ub3c4 \ub0b4\ubd80 \ud568\uc218\uac00 \uc678\ubd80 \ud568\uc218\uc758 \ubcc0\uc218 \ubc0f \ub9e4\uac1c\ubcc0\uc218\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub2e4\ub77c\ub294 \uac1c\ub150\uc785\ub2c8\ub2e4.\\n\\n### \uc608\uc2dc\\n\\nClosure\ub97c \uc774\ud574\ud558\uae30 \uc704\ud574, \uac04\ub2e8\ud55c Counter\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n```js\\nfunction createCounter() {\\n  let count = 0;\\n\\n  return {\\n    increment: function () {\\n      count++;\\n    },\\n    decrement: function () {\\n      count--;\\n    },\\n    getCount: function () {\\n      return count;\\n    },\\n  };\\n}\\n\\nconst counter = createCounter();\\n\\ncounter.increment();\\ncounter.increment();\\nconsole.log(counter.getCount()); // \ucd9c\ub825 : 2\\n\\ncounter.decrement();\\nconsole.log(counter.getCount()); // \ucd9c\ub825 : 1\\n\\nconsole.log(counter.count); // \ucd9c\ub825 : undefined\\n```\\n\\n\uc704 \ucf54\ub4dc\ub97c \ubcf4\uba74, `createCounter` \ud568\uc218\uac00 \uc2e4\ud589\ub418\uba74\uc11c `count` \ubcc0\uc218\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 `createCounter` \ud568\uc218\ub294 `increment`, `decrement`, `getCount` \uba54\uc11c\ub4dc\ub97c \uac00\uc9c4 \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c `createCounter` \ud568\uc218\uac00 \uc2e4\ud589\ub418\uace0 \ub098\uba74, `count` \ubcc0\uc218\ub294 \uc0ac\ub77c\uc9d1\ub2c8\ub2e4. \ud558\uc9c0\ub9cc, `createCounter` \ud568\uc218\uac00 \ubc18\ud658\ud55c \uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 `count` \ubcc0\uc218\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 Closure\uc758 \uac1c\ub150\uc785\ub2c8\ub2e4.\\n\\n### \uc801\uc6a9 \uc0ac\ub840\\n\\n```js {26-38}\\nscwin.initialize = () => {\\n  // \uad8c\ud55c Controller\\n  const authController = {\\n    checkAccessAuth: async () => {\\n      // \ubcf5\uc7a1\ud55c \ub0b4\ubd80 \ub85c\uc9c1\\n    },\\n    spcyAuthCallback: () => {\\n      // \ubcf5\uc7a1\ud55c \ub0b4\ubd80 \ub85c\uc9c1\\n    },\\n  };\\n\\n  // \ub370\uc774\ud130 Controller\\n  const dataController = {\\n    initCommonCode: () => {\\n      // \ubcf5\uc7a1\ud55c \ub0b4\ubd80 \ub85c\uc9c1\\n    },\\n    initUserData: () => {\\n      // \ubcf5\uc7a1\ud55c \ub0b4\ubd80 \ub85c\uc9c1\\n    },\\n    initPageData: () => {\\n      // \ubcf5\uc7a1\ud55c \ub0b4\ubd80 \ub85c\uc9c1\\n    },\\n  };\\n\\n  // \uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \ud638\ucd9c\ud558\ub294 \uba54\uc11c\ub4dc\\n  return {\\n    // \ubaa8\ub4e0 \uad8c\ud55c \uccb4\ud06c\\n    checkAuth: async () => {\\n      await authController.checkAccessAuth();\\n      authController.spcyAuthCallback();\\n    },\\n    // \ubaa8\ub4e0 \ubcc0\uc218 \ucd08\uae30\ud654\\n    initData: () => {\\n      dataController.initCommonCode();\\n      dataController.initUserData();\\n      dataController.initPageData();\\n    },\\n  };\\n};\\n```\\n\\n### SOLID\ub85c \uc0dd\uac01\ud574\ubcf4\uae30\\n\\n1. **\ub2e8\uc77c \ucc45\uc784 \uc6d0\uce59(SRP)**:\\n   \uc774 \ucf54\ub4dc\ub294 `authController`\uc640 `dataController`\ub77c\ub294 \ub450 \uac1c\uc758 \ucee8\ud2b8\ub864\ub7ec\ub85c \ub098\ub269\ub2c8\ub2e4. \uac01 \ucee8\ud2b8\ub864\ub7ec\uc5d0\ub294 \uace0\uc720\ud55c \ucc45\uc784\uc774 \uc788\uc73c\uba70, `authController`\ub294 \uad8c\ud55c \ubd80\uc5ec \ub85c\uc9c1\uc744 \ucc98\ub9ac\ud558\uace0 `dataController`\ub294 \ub370\uc774\ud130 \ucd08\uae30\ud654\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \uc5c5\ubb34\ub97c \ubd84\ub9ac\ud558\uba74 \ucf54\ub4dc\ub97c \uc720\uc9c0 \uad00\ub9ac\ud558\uace0 \uc218\uc815\ud558\uae30\uac00 \ub354 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4.\\n\\n2. **\uac1c\ubc29/\ud3d0\uc1c4 \uc6d0\uce59(OCP)**:\\n   \ucf54\ub4dc\uc758 \uad6c\uc870\ub294 \uc27d\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uae30\uc874 \uba54\uc11c\ub4dc\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uace0\ub3c4 `authController` \ub610\ub294 `dataController`\uc5d0 \uba54\uc11c\ub4dc\ub97c \ub354 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 \ud604\uc7ac \uae30\ub2a5\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\\n\\n3. **\uc778\ud130\ud398\uc774\uc2a4 \ubd84\ub9ac \uc6d0\uce59(ISP)**:\\n   `authController`\uc640 `dataController`\ub294 \uac01\uac01 \ud2b9\uc815 \uc791\uc5c5\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uba54\uc11c\ub4dc\uac00 \ud3ec\ud568\ub41c \uba85\ud655\ud558\uace0 \ucd5c\uc18c\ud55c\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc124\uacc4\ub294 \uac01 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub2f4\ub2f9 \uc5c5\ubb34\uc640 \uad00\ub828\ub41c \uba54\uc11c\ub4dc\ub9cc \ub178\ucd9c\ud558\ub3c4\ub85d \ud558\uc5ec \uac1c\ubc1c\uc790\uac00 \ubd88\ud544\uc694\ud55c \ubcf5\uc7a1\uc131 \ubd80\ub2f4 \uc5c6\uc774 \ucf54\ub4dc\ub97c \uc27d\uac8c \uc774\ud574\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.\\n\\n## 2. `this`\ub97c \ud65c\uc6a9\ud55c Method Chaining \ud83d\udd17\\n\\n### \uac1c\ub150\\n\\nMethod Chaining\uc740 \ub2e8\uc77c \uac1d\uccb4 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc5ec\ub7ec \uba54\uc11c\ub4dc\ub97c \ud558\ub098\uc758 \ud45c\ud604\uc2dd\uc73c\ub85c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac83\uc744 \ub9d0\ud569\ub2c8\ub2e4.\\n\\n\uc774\ub97c \ud1b5\ud574 \ucf54\ub4dc\ub97c \ub354 \uac04\uacb0\ud558\uace0 \uac00\ub3c5\uc131\uc774 \uc88b\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n:::caution\\nMethod Chaining\uc740 `this`\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0, \ud654\uc0b4\ud45c \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc548\ub429\ub2c8\ub2e4.\\n\ud654\uc0b4\ud45c \ud568\uc218\ub294 `this` \ucee8\ud14d\uc2a4\ud2b8\ub97c \uac00\uc9c0\uc9c0 \uc54a\uace0, \uc0c1\uc704 \uc2a4\ucf54\ud504\uc758 `this`\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\\n\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [\uc5ec\uae30](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\ub97c \ucc38\uace0\ud574\uc8fc\uc138\uc694.\\n:::\\n\\n### \uc608\uc2dc\\n\\nMethod Chaining\uc744 \uc774\ud574\ud558\uae30 \uc704\ud574, \uac04\ub2e8\ud55c Calculator \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n```js\\nclass Calculator {\\n  constructor() {\\n    this.value = 0;\\n  }\\n\\n  add(num) {\\n    this.value += num;\\n    return this;\\n  }\\n\\n  subtract(num) {\\n    this.value -= num;\\n    return this;\\n  }\\n\\n  multiply(num) {\\n    this.value *= num;\\n    return this;\\n  }\\n\\n  divide(num) {\\n    this.value /= num;\\n    return this;\\n  }\\n}\\n\\nconst calc = new Calculator();\\ncalc.add(10).subtract(3).multiply(2).divide(7);\\nconcole.log(calc.value); // \ucd9c\ub825 : 2\\n```\\n\\n\uc704 \ucf54\ub4dc\ub97c \ubcf4\uba74, `add`, `subtract`, `multiply`, `divide` \uba54\uc11c\ub4dc\uac00 \ubaa8\ub450 `this`\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c `this`\ub97c \ubc18\ud658\ud558\uba74, `calc` \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uba54\uc11c\ub4dc\ub97c \uc5f0\uc18d\uc801\uc73c\ub85c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n### \uc801\uc6a9 \uc0ac\ub840\\n\\n```js {52-60}\\nclass ParamData {\\n  constructor() {\\n    this.userInfo = {};\\n    this.encnInfo = {};\\n    this.hmMllnGrpId = \\"\\";\\n  }\\n\\n  async setUserInfo() {\\n    const userInfo = await getUserInfo();\\n    this.userInfo = userInfo;\\n    return this;\\n  }\\n\\n  async setEncnInfo() {\\n    const encnInfo = await getEncnInfo();\\n    this.encnInfo = encnInfo;\\n    return this;\\n  }\\n\\n  async setHmMllnGrpId() {\\n    const hmMllnGrpId = await getHmMllnGrpId();\\n    this.hmMllnGrpId = hmMllnGrpId;\\n    return this;\\n  }\\n\\n  async checkUserInfo() {\\n    const { userInfo } = this;\\n    if (!userInfo) {\\n      throw new Error(\\"\uc0ac\uc6a9\uc790 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\\");\\n    }\\n    return this;\\n  }\\n\\n  async checkEncnInfo() {\\n    const { encnInfo } = this;\\n    if (!encnInfo) {\\n      throw new Error(\\"encn \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\\");\\n    }\\n    return this;\\n  }\\n\\n  async checkHmMllnGrpId() {\\n    const { hmMllnGrpId } = this;\\n    if (!hmMllnGrpId) {\\n      throw new Error(\\"hmMllnGrpId\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\\");\\n    }\\n    return this;\\n  }\\n}\\n\\n// \uc0ac\uc6a9 \uc608\uc2dc\\nconst paramData = new ParamData();\\n\\ntry {\\n  paramData.setUserInfo().then(() => paramData.checkUserInfo());\\n  paramData.setEncnInfo().then(() => paramData.checkEncnInfo());\\n  paramData.setHmMllnGrpId().then(() => paramData.checkHmMllnGrpId());\\n} catch (error) {\\n  console.log(error);\\n}\\n```\\n\\n### SOLID\ub85c \uc0dd\uac01\ud574\ubcf4\uae30\\n\\n1. **\ub2e8\uc77c \ucc45\uc784 \uc6d0\uce59(SRP)**:\\n   ParamData \ud074\ub798\uc2a4\ub294 \uc0ac\uc6a9\uc790 \uc815\ubcf4, encn \uc815\ubcf4 \ubc0f hmMllnGrpId\uc5d0 \ub300\ud55c \uad00\ub828 \ub370\uc774\ud130\uc640 \uba54\uc11c\ub4dc\ub97c \ucea1\uc290\ud654\ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc758 \uac01 \uba54\uc11c\ub4dc\uc5d0\ub294 \ub2e8\uc77c \ucc45\uc784\uc774 \uc788\uc73c\ubbc0\ub85c \ucf54\ub4dc\ub97c \ub354 \uc27d\uac8c \uc720\uc9c0 \uad00\ub9ac\ud558\uace0 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n2. **\uac1c\ubc29/\ud3d0\uc1c4 \uc6d0\uce59(OCP)**:\\n   ParamData \ud074\ub798\uc2a4\ub97c \ud655\uc7a5\ud558\uc5ec \uae30\uc874 \uad6c\ud604\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\uace0\ub3c4 \ub354 \ub9ce\uc740 \ub370\uc774\ud130\uc640 \uad00\ub828 \uba54\uc11c\ub4dc\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ParamData\ub97c \uc11c\ube0c\ud074\ub798\uc2f1\ud558\uba74 \uae30\uc874 \uae30\ub2a5\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n3. **\ub9ac\uc2a4\ucf54\ud504 \uce58\ud658 \uc6d0\uce59(LSP)**:\\n   \uc774 \ucf54\ub4dc\ub294 \uc804\uccb4 \uae30\ub2a5\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba74\uc11c ParamData\uc758 \uc11c\ube0c\ud074\ub798\uc2a4\ub97c \uc27d\uac8c \uc0dd\uc131\ud558\uace0 \ub300\uccb4\ud560 \uc218 \uc788\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. ParamData\ub97c \ud655\uc7a5\ud558\ub294 \uc0c8\ub85c\uc6b4 \ud074\ub798\uc2a4\uac00 \ub3c4\uc785\ub420 \uacbd\uc6b0 \uae30\ubcf8 \ud074\ub798\uc2a4 \ub300\uc2e0 \ubb38\uc81c \uc5c6\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\\n4. **\uc778\ud130\ud398\uc774\uc2a4 \ubd84\ub9ac \uc6d0\uce59(ISP)**:\\n   ParamData \ud074\ub798\uc2a4\ub294 \ud2b9\uc815 \ub370\uc774\ud130 \uc18d\uc131\uc744 \uc124\uc815\ud558\uace0 \ud655\uc778\ud558\ub294 \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \uc9d1\uc911\uc801\uc774\uace0 \ucd5c\uc18c\ud55c\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc124\uacc4\ub294 \ud074\ub798\uc2a4\uac00 \ub2f4\ub2f9 \uc5c5\ubb34\uc640 \uad00\ub828\ub41c \uba54\uc11c\ub4dc\ub9cc \ub178\ucd9c\ud558\ub3c4\ub85d \ud558\uc5ec \uac1c\ubc1c\uc790\uac00 \ubd88\ud544\uc694\ud55c \ubcf5\uc7a1\uc131 \uc5c6\uc774 \ucf54\ub4dc\ub97c \uc27d\uac8c \uc774\ud574\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.\\n\\n## \ub9c8\uce58\uba70\\n\\n\uc774 \uae00\uc758 \uc81c\ubaa9\uc740 `(JS) Closure\uc640 Method Chaining \ud83d\udd17`\uc774\uc9c0\ub9cc, \uc2e4\uc81c\ub85c\ub294 SOLID \uc6d0\uce59\uc5d0 \ub300\ud55c \uae00\uc785\ub2c8\ub2e4. SOLID \uc6d0\uce59\uc740 \uac1d\uccb4 \uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \uc6d0\uce59 \uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uc774 \uc6d0\uce59\uc744 \uc798 \uc774\ud574\ud558\uace0 \uc801\uc6a9\ud558\uba74, \ucf54\ub4dc\ub97c \ub354 \uae54\ub054\ud558\uace0 \uac00\ub3c5\uc131\uc774 \uc88b\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ub9ac\ud329\ud1a0\ub9c1\uc73c\ub85c \uc644\uc131\ub41c \uc704\uc758 JavaScript \ucf54\ub4dc \uc608\uc81c\ub294 SOLID \uc6d0\uce59\uc744 \ud1b5\ud574, \uc5b4\ub5bb\uac8c \ub354 \uae54\ub054\ud558\uace0 \uccb4\uacc4\uc801\uc774\uba70 \ud6a8\uc728\uc801\uc778 \ucf54\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\ub294\uc9c0\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.\\n\\n\uc544\uc9c1 \ubd80\uc871\ud55c \uc810\uc774 \ub9ce\uc9c0\ub9cc \uc55e\uc73c\ub85c SOLID \uc6d0\uce59\uacfc \ub354\ubd88\uc5b4 \uacb0\ud569\ub3c4\ub294 \ub0ae\ucd94\uace0 \uc751\uc9d1\ub3c4\ub294 \ub192\uc774\ub294 \ub4f1\uc758 \ub2e4\uc591\ud55c \ub9ac\ud329\ud1a0\ub9c1 \uae30\ubc95\uc744 \uacf5\ubd80\ud558\uace0 \uc801\uc6a9\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."},{"id":"typescript-basic","metadata":{"permalink":"/en/blog/typescript-basic","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/i18n/en/docusaurus-plugin-content-blog/2023-04-16-typescript-basic/index.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023-04-16-typescript-basic/index.md","title":"TypeScript Basic\ud83d\udc24","description":"I\'ve summarized the basics of TypeScript.","date":"2023-04-16T00:00:00.000Z","formattedDate":"April 16, 2023","tags":[{"label":"typescript","permalink":"/en/blog/tags/typescript"}],"readingTime":5.905,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"typescript-basic","title":"TypeScript Basic\ud83d\udc24","description":"I\'ve summarized the basics of TypeScript.","image":"./images/preview.png","authors":["wannysim"],"tags":["typescript"],"enableComments":true},"prevItem":{"title":"(JS) Closure\uc640 Method Chaining \ud83d\udd17","permalink":"/en/blog/js-closure-and-method-chaining"},"nextItem":{"title":"Copilot for CLI Experience \ud83e\udd16","permalink":"/en/blog/github-copilot-cli"}},"content":"I\'ve summarized the basics of TypeScript.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Introduction to Typescript\\n\\nTypescript is a superset of Javascript that extends the functionality of Javascript by adding static types. Typescript is designed to be compatible with existing Javascript code while making it easier to write and maintain large applications.\\n\\n## Table of Contents\\n\\nArticle is broken down into four parts\\n\\n- [Basic syntax and types](#basic-syntax-and-types)\\n- [Concepts in Typescript](#concepts-in-typescript)\\n- [Interface and Class](#interface-and-class)\\n- [Module and Namespace](#module-and-namespace)\\n\\n## Basic syntax and types\\n\\nThere are a few basic types in Typescript that can be used to add type annotations to variables:\\n\\n- `number`: number\\n- `string`: text\\n- `boolean`: true or false\\n- `any`: any type, if you don\'t want to specify a type\\n\\nHere\'s an example of how to declare a variable using a type annotation in Typescript:\\n\\n```ts\\nlet firstName: string = \\"John\\";\\nlet age: number = 30;\\nlet isStudent: boolean = false;\\n```\\n\\n### array\\n\\nIn Typescript, an array is written like this\\n\\n```ts\\nlet numbers: number[] = [1, 2, 3];\\nlet names: string[] = [\\"John\\", \\"Jane\\", \\"Bob\\"];\\n\\n// Or\\n\\nlet numbers: Array<number> = [1, 2, 3];\\n```\\n\\n### tuple\\n\\nA tuple is an array of fixed length, where each element can have a specific type.\\n\\n```ts\\nlet person: [string, number] = [\\"John\\", 30];\\n```\\n\\n### enum\\n\\nAn enum is a set of constants with names.\\n\\n```ts\\nenum Color {\\n  Red,\\n  Green,\\n  Blue,\\n}\\n\\nlet c: Color = Color.Green;\\n```\\n\\n### any\\n\\nany represents any type. any skips type checking, so you lose type safety.\\n\\n```ts\\nlet notSure: any = 4;\\n\\nnotSure = \\"maybe a string instead\\";\\n\\nnotSure = false; // okay, definitely a boolean\\n```\\n\\n### function\\n\\nIn TypeScript, a function is written like this\\n\\n```ts\\nfunction add(a: number, b: number): number {\\n  return a + b;\\n}\\n```\\n\\n### void\\n\\nvoid is the return type for functions that have no return value.\\n\\n```ts\\nfunction warnUser(): void {\\n  console.log(\\"This is my warning message\\");\\n}\\n```\\n\\n### null and undefined\\n\\nEach of null and undefined has its own type. By default, null and undefined are subtypes of all types.\\n\\n```ts\\nlet u: undefined = undefined;\\n\\nlet n: null = null;\\n```\\n\\n### never\\n\\nnever represents a value that will never occur. never can be used as the return type of a function.\\n\\n```ts\\nfunction error(message: string): never {\\n  throw new Error(message);\\n}\\n```\\n\\n### object\\n\\nobject represents all types except primitive types.\\n\\n```ts\\ndeclare function create(o: object | null): void;\\n\\ncreate({ prop: 0 }); // OK\\n\\ncreate(null); // OK\\n\\ncreate(42); // Error\\n\\ncreate(\\"string\\"); // Error\\n\\ncreate(false); // Error\\n\\ncreate(undefined); // Error\\n```\\n\\n## Concepts in Typescript\\n\\n### Type Inference\\n\\nType inference is how Typescript infers types. If you don\'t specify the type of a variable, Typescript will infer the type of the variable.\\n\\n```ts\\nlet a = 1 + 2; // a is inferred to be of type number.\\n\\nlet b = [1, null]; // b is inferred to be of type (number | null)[].\\n\\nlet c = \\"abc\\".substr(1); // c is inferred to be of type string.\\n```\\n\\n### Type Assertions\\n\\nType assertions tell the compiler to specify a type as a particular type. Typescript allows developers to specify types, but it is the developer\'s responsibility to do so.\\n\\nIn other words, you\'re asserting to the compiler, \\"Do what I tell you to do.\\"\\n\\n```ts\\nlet someValue: any = \\"this is a string\\";\\n\\nlet strLength: number = (someValue as string).length; // as syntax\\n\\n// Or\\n\\nlet strLength: number = (<string>someValue).length; // Not available in JSX syntax.\\n```\\n\\n### Literal Narrowing\\n\\nLiteral Narrowing is a way for Typescript to narrow literal types. A literal type is a type that represents a specific value in Typescript.\\n\\n```ts\\nlet x: 10 = 10; // x has a literal type of 10.\\n```\\n\\n### Union Types\\n\\nUnion Types is a way for Typescript to combine multiple types into a single type.\\n\\n```ts\\nlet x: number | string = 10; // x has the type number or string.\\n```\\n\\n### Type Guards\\n\\nType guards are a way for TypeScript to check types. There are two ways to check types\\n\\n- typeof\\n- instanceof\\n\\n```ts {2,6,11,15}\\nfunction isNumber(x: any): x is number {\\n  return typeof x === \\"number\\"; // return x instanceof Number;\\n}\\n\\nfunction isString(x: any): x is string {\\n  return typeof x === \\"string\\"; // return x instanceof String;\\n}\\n\\nfunction padLeft(value: string, padding: string | number) {\\n  // \\"number\\"\\n  if (isNumber(padding)) {\\n    return Array(padding + 1).join(\\" \\") + value;\\n  }\\n  // \\"string\\"\\n  if (isString(padding)) {\\n    return padding + value;\\n  }\\n  throw new Error(`Expected string or number, got \'${padding}\'.`);\\n}\\n```\\n\\n### Type Compatibility\\n\\nType compatibility is a way for Typescript to ensure that types are compatible. Type compatibility is based on structural typing. Structural typing means that types are compatible if they are structurally equivalent.\\n\\n```ts\\ninterface Named {\\n  name: string; // It must have a name property.\\n}\\n\\nclass Person {\\n  name: string; // It must have a name property.\\n}\\n\\nlet p: Named;\\n\\n// Structured typing is compatible because it has a name property with a string type.\\n\\np = new Person();\\n```\\n\\n### Type Aliases\\n\\nType Aliases are a way to define a type with a new name.\\n\\n```ts\\ntype Name = string;\\n\\ntype NameResolver = () => string;\\n\\ntype NameOrResolver = Name | NameResolver;\\n\\nfunction getName(n: NameOrResolver): Name {\\n  if (typeof n === \\"string\\") {\\n    return n;\\n  } else {\\n    return n();\\n  }\\n}\\n```\\n\\n## Interface and Class\\n\\n### Interface\\n\\nInterfaces are used to define the appearance of an object so that it meets specific requirements.\\n\\n```ts\\ninterface User {\\n  id: number;\\n  name: string;\\n  email: string;\\n}\\n\\nconst user: User = {\\n  id: 1,\\n  name: \\"John Doe\\",\\n  email: \\"john@example.com\\",\\n};\\n```\\n\\n### Class\\n\\nClasses are used to create objects with specific structure and behavior.\\n\\n```ts\\nclass Animal {\\n  name: string;\\n\\n  constructor(name: string) {\\n    this.name = name;\\n  }\\n\\n  speak(): void {\\n    console.log(`My name is ${this.name}`);\\n  }\\n}\\n\\nconst dog = new Animal(\\"Buddy\\");\\ndog.speak(); // Output : My name is Buddy\\n```\\n\\n## Module and Namespace\\n\\n### Module\\n\\nModules help you organize and encapsulate your code. Modules can contain variables, functions, classes, and more.\\n\\n```ts title=\\"math.ts\\"\\nexport function add(a: number, b: number): number {\\n  return a + b;\\n}\\n```\\n\\n```ts title=\\"subtraction.ts\\"\\nexport function subtract(a: number, b: number): number {\\n  return a - b;\\n}\\n```\\n\\n```ts title=index.ts\\nimport { add } from \\"./math\\";\\nimport { subtract } from \\"./subtraction\\";\\n\\nconsole.log(add(1, 2)); // Output : 3\\nconsole.log(subtract(5, 3)); // Output : 2\\n```\\n\\n### Namespace\\n\\nNamespaces are another way to organize your code. Namespaces help you avoid name conflicts and group related functions together:\\n\\n```typescript\\nnamespace Geometry {\\n  export interface Point {\\n    x: number;\\n    y: number;\\n  }\\n\\n  export function calculateDistance(p1: Point, p2: Point): number {\\n    const dx = p1.x - p2.x;\\n    const dy = p1.y - p2.y;\\n    return Math.sqrt(dx * dx + dy * dy);\\n  }\\n}\\n\\nconst point1: Geometry.Point = { x: 0, y: 0 };\\nconst point2: Geometry.Point = { x: 3, y: 4 };\\nconst distance: number = Geometry.calculateDistance(point1, point2);\\n\\nconsole.log(distance); // Output: 5\\n```"},{"id":"github-copilot-cli","metadata":{"permalink":"/en/blog/github-copilot-cli","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/i18n/en/docusaurus-plugin-content-blog/2023-04-15-github-copilot-cli/index.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023-04-15-github-copilot-cli/index.md","title":"Copilot for CLI Experience \ud83e\udd16","description":"I tried out Copilot for CLI, released by GitHub Next.","date":"2023-04-15T00:00:00.000Z","formattedDate":"April 15, 2023","tags":[{"label":"github-cli","permalink":"/en/blog/tags/github-cli"},{"label":"github-copilot-cli","permalink":"/en/blog/tags/github-copilot-cli"},{"label":"copilot","permalink":"/en/blog/tags/copilot"}],"readingTime":3.245,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"github-copilot-cli","title":"Copilot for CLI Experience \ud83e\udd16","description":"I tried out Copilot for CLI, released by GitHub Next.","image":"./images/preview.png","authors":["wannysim"],"tags":["github-cli","github-copilot-cli","copilot"],"enableComments":true},"prevItem":{"title":"TypeScript Basic\ud83d\udc24","permalink":"/en/blog/typescript-basic"},"nextItem":{"title":"My first encounter with Docusaurus \ud83e\udd96","permalink":"/en/blog/first-post"}},"content":"I tried out Copilot for CLI, released by [GitHub Next](https://githubnext.com/).\\n\\n\x3c!-- truncate --\x3e\\n\\n:::info\\n\\nThis post is translated by [DeepL](https://www.deepl.com/translator), and corrected by me.\\n\\n:::\\n\\n## Before you try it \ud83d\udeb6\\n\\n### What is GitHub Copilot?\\n\\n[Copilot for CLI](https://githubnext.com/projects/copilot-cli/) is an open source project created by GitHub that allows you to use GitHub Copilot in CLI. If you click **Sign up for the waitlist** in the previous link, you will be given the opportunity to use GitHub Copilot.\\n\\n### How long do I have to wait?\\n\\nI don\'t remember exactly when I applied, but less than a month later I received the email below!\\n\\n![email-from-github-next](./images/email-from-github-next.png \\"email-from-github-next\\")\\n\\n## Installing the Copilot for CLI \ud83d\udee0\\n\\n### Install\\n\\nGlobal installation using npm.\\n\\n```bash\\nnpm install -g @githubnext/github-copilot-cli\\n```\\n\\n### Authentication\\n\\nTo use Copilot for CLI, you need to authenticate to GitHub Copilot. To authenticate, log in to GitHub Copilot and execute the command below.\\n\\n```bash\\ngithub-copilot-cli auth\\n```\\n\\nFollow the instructions to log in, as shown in the image below, and you\'ll be authenticated.\\n\\n![github-copilot-cli-auth](./images/github-copilot-cli-auth.png \\"github-copilot-cli-auth\\")\\n\\n## Trying out Copilot for CLI \ud83e\udd16\\n\\n:::note\\n\\nRunning Environment : WSL Ubuntu 22.04\\n\\n:::\\nFirst, check your commands with `github-copilot-cli -h`.\\n\\n```\\nUsage: Copilot CLI [options] [command]\\n\\nA CLI experience for letting GitHub Copilot help you on the command line.\\n\\nOptions:\\n  -V, --version                        output the version number\\n  -h, --help                           display help for command\\n\\nCommands:\\n  auth                                 Retrieve and store a GitHub Access Token.\\n  alias <shell path>                   Add convenient GitHub Copilot CLI aliases to your shell.\\n  what-the-shell [options] <query...>  Use GitHub Copilot to get shell commands from natural\\n                                       language descriptions.\\n  git-assist [options] <query...>      Translate a natural language description of a git command to\\n                                       an actual git command.\\n  gh-assist [options] <query...>       Convert plain english to GitHub CLI commands.\\n  help [command]                       display help for command\\n```\\n\\n### Adding an alias\\n\\nUsing the `alias` command, you can add an alias to make the Copilot for CLI easier to use.\\n\\n```bash\\neval \\"$(github-copilot-cli alias -- \\"$0\\")\\"\\n```\\n\\n### 1. `what-the-shell` (`??`)\\n\\nWith the `what-the-shell` command, you can write shell commands in natural language via GitHub Copilot.\\n\\nLet\'s write a command that recursively prints only the desired directories (docs, blog, src) to a tree.\\n\\n```bash\\ngithub-copilot-cli what-the-shell \\"directory tree\\"\\n```\\n\\nUsing the alias you added in [Adding an alias](#adding-an-alias) above, you can use it like this\\n\\n```bash\\n?? \\"directory tree\\"\\n```\\n\\n![what-the-shell](./images/what-the-shell.gif \\"what-the-shell\\")\\n\\n```bash\\ntree -R docs blog src\\n```\\n\\nThat\'s the command we wanted! \ud83c\udf89\\n\\n### 2. `git-assist` (`git?`)\\n\\nYou can write git commands in natural language.\\n\\nLet\'s try to delete a branch.\\n\\n```bash\\ngit-assist \\"delete branch\\" # git? \\"delete branch\\"\\n```\\n\\n![git-assist](./images/git-assist.gif \\"git-assist\\")\\n\\nI deleted the `feature/giscus` branch that I forgot to delete \ud83d\ude05\\n\\n### 3. `gh-assist` (`gh?`)\\n\\n:::info\\n\\nIf you haven\'t used the GitHub CLI before, please install the [GitHub CLI](https://cli.github.com/) first. For OSes other than Windows, you can follow the [official guide](https://github.com/cli/cli#installation).\\n\\n:::\\n\\nIt combines the power of the GitHub CLI command and query interface with the ability to generate complex flags and jq expressions for you.\\n\\nLet\'s create a new issue.\\n\\n```bash\\ngh-assist \\"open new issue\\" # gh? open new issue\\n```\\n\\n![gh-assist1](./images/gh-assist1.gif \\"gh-assist\\")\\n\\nYou\'ve created a new issue!\\n\\nNow let\'s create a new PR.\\n\\n```bash\\ngh-assist \\"open new pull request\\" # gh? open new pull request\\n```\\n\\nIn addition, we\'ll add the following four instructions\\n\\n- title \\"Copilot for CLI \uccb4\ud5d8\uae30 \ud83e\udd16\\"\\n- content \\"Close #27\\"\\n- assign to me\\n- label documentation\\n\\n![gh-assist2](./images/gh-assist2.png \\"gh-assist\\")\\n![gh-assist3](./images/gh-assist3.png \\"gh-assist\\")\\n\\nThe github cli can now automatically generate PRs that you\'ve been writing by hand!\\n\\n## Conclusion \ud83c\udf89\\n\\nFirst of all, I was surprised that my comprehension was better than I expected.\\n\\nI\'ve been used to the GUI environment, so there was something uncomfortable when using the CLI, but I think I can get used to using the CLI while using Copilot for CLI.\\n\\nIn particular, `gh-assist` seems to be helpful for using the GitHub CLI as well."},{"id":"first-post","metadata":{"permalink":"/en/blog/first-post","editUrl":"https://github.com/0420syj/0420syj.github.io/tree/master/i18n/en/docusaurus-plugin-content-blog/2023-04-14-first-post/index.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023-04-14-first-post/index.md","title":"My first encounter with Docusaurus \ud83e\udd96","description":"I came across Docusaurus, and created a blog.","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"docusaurus","permalink":"/en/blog/tags/docusaurus"},{"label":"tutorial","permalink":"/en/blog/tags/tutorial"}],"readingTime":1.955,"hasTruncateMarker":true,"authors":[{"name":"Wan Sim","title":"Frontend Developer @ HandHug","url":"https://github.com/0420syj","imageURL":"https://avatars.githubusercontent.com/u/22449484","key":"wannysim"}],"frontMatter":{"slug":"first-post","title":"My first encounter with Docusaurus \ud83e\udd96","description":"I came across Docusaurus, and created a blog.","image":"./images/preview.png","authors":["wannysim"],"tags":["docusaurus","tutorial"],"enableComments":true},"prevItem":{"title":"Copilot for CLI Experience \ud83e\udd16","permalink":"/en/blog/github-copilot-cli"}},"content":"I came across Docusaurus one day, quite by accident.\\n\\nIt was a blog on GitHub.io, and it looked really pretty and easy to use.\\nAnd the footer of that blog said `~ Built with Docusaurus.`\\n\\n\x3c!-- truncate --\x3e\\n\\n## Docusaurus as a blog \ud83e\udd96\\n\\nI\'ve used static site generators like [Jekyll](https://jekyllrb.com/) and [Hugo](https://gohugo.io/), but Docusaurus was the easiest to use.\\n\\n### What is Docusaurus? \ud83e\udd14\\n\\nDocusaurus is an open source project created by Meta, and is a React-based static site generator.\\n\\n### Pros \ud83c\udf89\\n\\n#### 1. Powered by React \ud83d\udcf1\\n\\nIt\'s a static site generator based on React, so if you have experience with React, you can quickly create a blog.\\n\\n#### 2. Well-written guide documentation \ud83d\udcda\\n\\nSince it\'s a project created by Meta, the guide documentation is well written. You can create a blog by looking at the [Docusaurus official documentation](https://docusaurus.io/docs).\\n\\n#### 3. Convenient features \ud83d\udee0\\n\\nDocusaurus provides the features you need to create a blog. It provides the features you need to create a blog, so you can save time when creating a blog.\\n\\n#### 4. Active community \ud83e\udd1d\\n\\nAsk questions on the [Docusaurus official Discord channel](https://discord.com/invite/docusaurus) and get answers quickly.\\n\\n#### 5. Host your GitHub Pages \ud83d\ude80\\n\\nYou can use GitHub Pages as a hosting server. By using GitHub Pages as your hosting server, you can simplify the process of creating and deploying your blog.\\n\\n#### 6. Themes \ud83c\udfa8\\n\\nDocusaurus provides several themes in addition to the default theme. You can create a blog by looking at the [Docusaurus official theme](https://docusaurus.io/showcase).\\n\\n#### 7. Plant a natural GitHub lawn \ud83c\udf31\\n\\nTo plant your GitHub lawn, you can use GitHub Actions. With GitHub Actions, you can plant a natural GitHub lawn.\\n\\n### Features \ud83d\udee0\\n\\nGitHub Actions provides a variety of handy features for creating documentation.\\n\\n- Create Markdown documents\\n- Document versioning\\n- Categories and tags\\n- i18n\\n- Search\\n\\n## Creating a blog with Docusaurus \ud83d\udcdd\\n\\nI\'ve used [Tistory](https://www.tistory.com/), [Velog](https://velog.io/), and [Notion](https://www.notion.so/), which are popular blogging platforms used by domestic developers, but there were many limitations when creating a blog.\\n\\nTo help more people create blogs, I wrote a simple guide to create a Docusaurus blog.\\n\\nLink: [Docusaurus Tutorial \ud83e\udd96](https://0420syj.github.io/en/docs/docusaurus-tutorial/intro/)\\n\\n## Closing thoughts \ud83c\udf89\\n\\nThere are a lot of features we haven\'t added yet, but we\'ll continue to implement them and add them to the tutorial as we go."}]}')}}]);